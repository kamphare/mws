{"version":3,"sources":["components/Sol.jsx","components/SolsList.jsx","components/DetailsTable.jsx","components/SolDetails.jsx","App.js","reportWebVitals.js","index.js"],"names":["Sol","sol","id","avgTemp","avgWind","firstUTC","season","to","className","URL","process","SolsList","useState","sols","setSols","getSols","a","fetch","res","json","console","log","useEffect","map","key","DetailsTable","min","max","avg","unit","label","samples","minRounded","toFixed","maxRounded","avgRounded","SolDetails","setSol","useParams","getSol","error","minTemp","maxTemp","tempSamples","minWind","maxWind","windSamples","LastUTC","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcb9ce54.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport function Sol({ sol, id }) {\r\n  \r\n  if (!sol['AT']) return null;\r\n  const avgTemp = sol['AT']['av']\r\n  const avgWind = sol['HWS']['av']\r\n  const firstUTC = sol['First_UTC']\r\n  const season = sol['Season']\r\n  \r\n  return (\r\n      <Link to={`/details/${id}`}>\r\n        <div className=\"card grid--card\">\r\n          <div className=\"card__heading\">\r\n            <div className=\"heading__desc yellow\">sol:</div>\r\n            <h2 className=\"orange\">{id}</h2>\r\n          </div>\r\n          <div className=\"card__sub-heading yellow\">\r\n            {firstUTC}\r\n          </div>\r\n          <div className=\"card__content\">\r\n          <p>Avg. Temperature: {avgTemp}</p>\r\n          <p>Average Wind: {avgWind}</p>\r\n          </div>\r\n          <div className=\"card__footer\">\r\n            <h4>{season}</h4>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n  )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport { Sol } from './Sol'\r\nconst key = process.env.REACT_APP_API_KEY;\r\nconst URL = `https://api.nasa.gov/insight_weather/?api_key=${key}&feedtype=json&ver=1.0`;\r\n\r\nexport function SolsList() {\r\n  const [sols, setSols] = useState({});\r\n\r\n  const getSols = async () => {\r\n    const res = await fetch(URL);\r\n    const sols = await res.json();\r\n    setSols(sols);\r\n    console.log(sols);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSols();\r\n  }, [])\r\n  \r\n  if (!sols['sol_keys']) return null;\r\n  \r\n  return (\r\n    <div className=\"grid--content\">\r\n      <div className=\"content__header\">\r\n        <h1>Latest Weather at Elysium Planitia</h1>\r\n        <h2>InSight is taking daily weather measurements (temperature, wind, pressure) on the surface of Mars at Elysium Planitia, a flat, smooth plain near Marsâ€™ equator.</h2>\r\n      </div>\r\n      <div className=\"content__body grid--cards\">\r\n      {\r\n        sols['sol_keys'].map((key) => {\r\n          return <Sol key={key} id={key} sol={sols[key]}/>\r\n        })\r\n      }\r\n    </div>\r\n    </div>\r\n    \r\n  )\r\n}","import { React } from 'react';\r\n\r\nexport function DetailsTable({ min, max, avg, unit, label, samples}) {\r\n  \r\n  console.log(min)\r\n  if (!min) return null;\r\n  const minRounded = min.toFixed(1);\r\n  const maxRounded = max.toFixed(1);\r\n  const avgRounded = avg.toFixed(1);\r\n\r\n\r\n  return (\r\n      <div className=\"details\">\r\n        <h2>{label}</h2>\r\n        <p>Average: {minRounded}{unit}</p>\r\n        <p>Max: {maxRounded}{unit}</p>\r\n        <p>Min: {avgRounded}{unit}</p>\r\n        <p>Data combined from {samples} collected samples.</p>\r\n      </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport { DetailsTable } from './DetailsTable'\r\nconst key = process.env.REACT_APP_API_KEY;\r\nconst URL = `https://api.nasa.gov/insight_weather/?api_key=${key}&feedtype=json&ver=1.0`;\r\n\r\nexport function SolDetails() {\r\n  const [sol, setSol] = useState({});\r\n  let { id } = useParams();\r\n  \r\n  const getSol = async () => {\r\n    try {\r\n      const res = await fetch(URL);\r\n      const sol = await res.json();\r\n      setSol(sol[id]);\r\n    }\r\n    catch(e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSol();\r\n  }, [])\r\n  \r\n  if (!sol['Season']) return null;\r\n  const minTemp = sol['AT']['mn']\r\n  const maxTemp = sol['AT']['mx']\r\n  const avgTemp = sol['AT']['av']\r\n  const tempSamples = sol['AT']['ct']\r\n  const minWind = sol['HWS']['mn']\r\n  const maxWind = sol['HWS']['mx']\r\n  const avgWind = sol['HWS']['av']\r\n  const windSamples = sol['AT']['ct']\r\n  const firstUTC = sol['First_UTC']\r\n  const LastUTC = sol['Last_UTC']\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sol: {id}</h1>\r\n      <h2>Data collected between: {firstUTC} and {LastUTC}</h2>\r\n      <DetailsTable sol={sol} min={minTemp} max={maxTemp} avg={avgTemp} unit={'C'} label={'Temperature'} samples={tempSamples}/>\r\n      <DetailsTable min={minWind} max={maxWind} avg={avgWind} unit={'m/s'} label={'Wind'} samples={windSamples}/>\r\n\r\n    </div>\r\n  )\r\n}","import './App.css';\nimport { SolsList } from './components/SolsList'\nimport { SolDetails } from './components/SolDetails'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App grid--layout background\">\n      <div className=\"stars--wrapper\">\n        <div id=\"stars\"></div>\n        <div id=\"stars2\"></div>\n        <div id=\"stars3\"></div>\n      </div>\n      <header className=\"header\">\n        <nav className=\"nav grid--nav\">\n          <div className=\"nav__logo\">\n            MWS\n          </div>\n          <div className=\"nav__title\">\n            Mars Weather Service\n          </div>\n        </nav>\n      </header>\n      <main className=\"main grid--content\">\n        <Router>\n        <Switch>\n          <Route path=\"/details/:id\">\n            <SolDetails />\n          </Route>\n          <Route path=\"/\">\n            <SolsList />\n          </Route>\n        </Switch>\n        </Router>\n      </main>\n      <footer className=\"footer\">\n        <p>hello</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}